<?xml version="1.0" encoding="ISO-8859-1"?>

<bugrepository name="ZXing">
  <bug id="364" opendate="2010-03-30 04:03:07" fixdate="2010-04-01 03:04:39">
    <buginformation>
      <summary>Crashes on Highscreen Zeus</summary>
      <description>1. When BarcodeScanner runs, it dead with NullPointerException
2.
3.

V/CameraManager( 2138): Calculated framing rect: Rect(50, 0 - 350, 240)
W/dalvikvm( 2138): threadid=17: thread exiting with uncaught exception
(group=0x4001da28)
E/AndroidRuntime( 2138): Uncaught handler: thread Thread-9 exiting due to
uncaught exception
E/AndroidRuntime( 2138): java.lang.IllegalArgumentException: Unsupported
picture format: 0/null
E/AndroidRuntime( 2138):         at
com.google.zxing.client.android.CameraManager.buildLuminanceSource(CameraManager.java:318)
E/AndroidRuntime( 2138):         at
com.google.zxing.client.android.DecodeThread.access$000(DecodeThread.java:44)
E/AndroidRuntime( 2138):         at
com.google.zxing.client.android.DecodeThread$1.handleMessage(DecodeThread.java:98)
E/AndroidRuntime( 2138):         at
android.os.Handler.dispatchMessage(Handler.java:99)
E/AndroidRuntime( 2138):         at android.os.Looper.loop(Looper.java:123)
E/AndroidRuntime( 2138):         at
com.google.zxing.client.android.DecodeThread.run(DecodeThread.java:106)
I/Process ( 1009): Sending signal. PID: 2138 SIG: 3


version 48, Android 1.6 (on 1.5 it also crash)

Well, as I see, problem is in capturing video from camera. If you say me, I
can build test app, or something else</description>
      <comments>
		<comment id="1" date="2010-03-30 22:16:11" author="sro...@gmail.com">This looks like a device bug as it is not correctly advertising its preview  
format. Can you run the app "ZXing
Test" from the market? it will send us more information on the device.

Unless we know the device is properly using YUV420 preview format, we can't  
just assume it's this format. It
would cause other problems. So we might have to blacklist the device and  
ask you to contact the manufacturer
about a fix.

Marking not-a-bug until we know otherwise since the output here shows the  
device is not implementing the
platform correctly.</comment>
		<comment id="2" date="2010-03-30 23:29:34" author="dswit...@google.com">Even if the device returns the wrong (or no) values we shouldn't crash. We  
should put up a dialog explaining that
this device is not compatible with the Android camera spec.</comment>
		<comment id="3" date="2010-03-31 12:59:55" author="d.klykvin">Well, "Take test photos" works ok. "Scan product" or "Scan anything"  
crashes with
IllegalArgumentException
I sent you mail to zxing-external@ (Version Incremental:  
eng.rmcc.20100328.045021 ,
etc). Say me, if you need more information</comment>
		<comment id="4" date="2010-03-31 01:27:32" author="sro...@gmail.com">Yep you're right Daniel -- just got the camera parameters report and it's  
another geeksphone. I'm going to
'blacklist' it like we do the Pulse.

... we could then actually proceed with pretending the device is using YUV  
420? it may not work, but at least we
warned the user it might not work.

Yes, we got the message fine. The other functions invoke BS, and yes the  
device isn't behaving as expected so the
app stops.</comment>
		<comment id="5" date="2010-03-31 01:43:20" author="d.klykvin">Someone upload version that work: http://slil.ru/28711898
Maybe you can look at it, and modify your version?</comment>
		<comment id="6" date="2010-03-31 03:26:49" author="sro...@gmail.com">Yes I think the device actually uses YUV420, which is the required default,  
so just skipping this check happens to
work on this device. It's not clear that works on other devices. So yes I  
understand the hack that works here, and
you're welcome to use that build or make the hack locally and build for  
yourself

But really the manufacturer needs to fix this, so I'd contact them as well  
and ask what's up.</comment>
		<comment id="7" date="2010-03-31 03:50:35" author="d.klykvin">Well, it's geeksphone firmware, but phone named Highscreen Zeus. I'll try  
to ask
support email and put it in this issue.
Maybe you can add list of devices (such as Zeus or Pulse), where you can  
skip check?
So people can download your app from AppStore, and don't google for working  
version?</comment>
		<comment id="8" date="2010-03-31 06:09:15" author="d.klykvin">I'll comment check for previewFormat, but it don't work (
Now BarcodeScanner infinitely try to autofocus. It can't capture code from  
paper and
monitor, even if my hands don't shake.

Maybe I can try something else? Disable autofocus, etc</comment>
		<comment id="9" date="2010-03-31 07:32:51" author="sro...@gmail.com">Continuous auto-focus is normal, but not scanning is not normal. If you  
have a clear, steady, well lit QR code and
it's not scanning then something else is surely wrong. Maybe the data  
format is not YUV420 then? not sure.</comment>
		<comment id="10" date="2010-03-31 09:54:44" author="ricardo.cerqueira">Hi;

I maintain a ROM for those devices (GP ONE/Highscreen Zeus/Commtiva Z1/etc)  
and
coincidentally looked into this about a week ago... and you're correct: the  
original
camera driver does not send a preview format (it's SP, btw)

The continuous focus is a different problem: When you generate the
PlanarYUVLuminanceSource, you do so with the originally requested preview  
size. Even
if you get different values from probing the camera resolution, the source  
dimensions
remain the same (in these devices, with the stock ROM, you ask  
for "full-screen",
360x240, and get back 320x240, which is a preview size supported by the  
camera
driver). From that point onwards, scan operations fail.

I fixed this simply by adding the full screen dimensions to the list of  
supported
preview sizes in the driver; without that, I got the same behaviour as  
d.klykvin.</comment>
		<comment id="11" date="2010-03-31 15:25:19" author="sro...@gmail.com">That's good to know, but would it not be simpler to add a preview-size  
parameter to the list of parameters the
camera returns? (Or are you saying this is not possible at the ROM level?)

You are right that it takes a wild guess at the end if it doesn't know  
better, and guesses the screen size, and that
is probably wrong in some cases - like this one.</comment>
		<comment id="12" date="2010-03-31 22:41:46" author="ricardo.cerqueira">Er, I did, you're mixing 2 separate issues.

Issue 1: lack of preview size, causes crash on start.
Issue 2: mismatched resolution, causes never-ending auto-focus and  
inability to scan.</comment>
		<comment id="13" date="2010-04-01 12:54:06" author="sro...@gmail.com">If preview-size is set, there ought not be no mismatched resolution. It  
will use this size, and not 'guess' that it's
the same as the screen size.</comment>
		<comment id="14" date="2010-04-01 06:18:01" author="ricardo.cerqueira">My bad, I hadn't had my coffee...
You're partly right: the camera provides "preview-size", but your code  
actually
expects a list in preview-size-values, which should also be present but  
isn't.</comment>
		<comment id="15" date="2010-04-01 19:03:59" author="sro...@gmail.com">Oops yes I meant the preview-size-values parameter. we used to look for  
preview-size but want to actually
select the size closest to the screen size so changed that.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="cb247250ac2b7526196943b1be616f0ccf989ec9" author="srowen" date="2010-03-31 01:28:44"/>
          <file name="android/src/com/google/zxing/client/android/HelpActivity.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="383" opendate="2010-04-15 05:04:58" fixdate="2010-04-16 03:04:35">
    <buginformation>
      <summary>3.22 on Samsung Spica (480x320) shows only 1/4 of magnified screen</summary>
      <description>Upgrade 3.2 -&gt; 3.22 introduced new bug on Samsung Spica i5700.

At 480x320 screen, program shows only left upper corner of camera input.
Picture looks twice bigger, than it should be. It's impossible to scan any
codes.

Rolled back to 3.2, until fixed.</description>
      <comments>
		<comment id="1" date="2010-04-15 23:53:28" author="sro...@gmail.com">I can give you a build that may address this if you'll get me your email  
address separately.</comment>
		<comment id="2" date="2010-04-15 23:57:34" author="megahobby">Will be glad to help with testing. vit...@rcdesign.ru</comment>
		<comment id="3" date="2010-04-16 01:58:29" author="megahobby">Debug package, you've sent, is ok at spica.</comment>
		<comment id="4" date="2010-04-16 20:01:15" author="megahobby">I committed my fix to SVN, a change which also ought resolve an issue on  
the Moment + Android 2.1</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="484fc75f44c6fd33ad22f29823693662de8a77df" author="srowen" date="2010-04-16 07:56:15"/>
          <file name="android/src/com/google/zxing/client/android/camera/CameraConfigurationManager.java">
              <method name="initFromCameraParameters" returnType="void" parameters="Camera"/>
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/CameraManager.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="357" opendate="2010-03-10 01:03:22" fixdate="2010-04-19 13:04:49">
    <buginformation>
      <summary>Failure decoding PDF417 barcode</summary>
      <description>We are currently evaluating ZXING for a banking records system which uses PDF417 on printed documents. The input images are grayscale JPEGs from a scanner. The system already decodes Code39 successfully, but PDF417 fails with NotfoundException or FormatException on the attached images (same encoded text on all of them): 00123MCTA0123456789012345678901234567890123456789012345678900101 I'm using version 1.5 on Windows XP. I've modified the GUIRunner to run with the following params: 

      Hashtable&lt;DecodeHintType, Object&gt; hints = new
Hashtable&lt;DecodeHintType, Object&gt;(3);
             Vector&lt;BarcodeFormat&gt; vector = new Vector&lt;BarcodeFormat&gt;(8);
             vector.addElement(BarcodeFormat.PDF417);
             hints.put(DecodeHintType.POSSIBLE_FORMATS, vector);
             hints.put(DecodeHintType.TRY_HARDER, Boolean.TRUE);

             result = new PDF417Reader().decode(bitmap, hints);

They are decoded successfully with FineReader OCR engine, but we'd like to
avoid that solution for barcode detection since it taxes the CPU heavily.

Apart from that, ZXING is a wonderful project, thanks for your work!</description>
      <comments>
		<comment id="1" date="2010-03-10 18:07:25" author="fct.dev">Forgot to add, the JRE we are using is Sun's 1.5.0_15. Tell so if you need  
more
information.</comment>
		<comment id="2" date="2010-03-10 18:48:53" author="sro...@gmail.com">There are two issues.

In both, there are 2 barcodes in the image, which doesn't quite work, since  
it will
detect the top of one and bottom of the other as the boundaries. You can  
use the
detectors in com.google.zxing.multi to handle multiple barcodes in one  
image.

If you split up the barcodes, the ones in image 2 decode fine.


However that is not the issue for image 1. They're not decoding even after  
separating
them. It's finding the boundaries of the barcode correctly, but when  
sampling the
bits, it comes out wrong. Looking closely at the image, I think it may be  
due to a
slight warping of the barcode? It appears like it's on a curved page. It  
also looks like
it is stretched out horizontally, which I'm not sure is allowed. Can you  
get a more
straightforward scan of the barcode, like in image 2?


Since I think this explains the output, I'm marking as 'not a bug' but we  
can continue
discussion in any event.</comment>
		<comment id="3" date="2010-03-10 19:38:06" author="fct.dev">The ones in image 1 are a copy of those in image 2 stretched to resemble  
what might
have been the final output, using Paint. Sorry, disregard that one, not even
FineReader detects the barcodes.

As for image 2, instead of splitting I deleted a single one and it still  
raises a
NotFoundException. I attach the file which decodes correctly on FineReader  
in case
it's of any use.

I also attach a second file using something similar to a document with a  
barcode
(skewed due to the scanner). Same case, NotFoundException in ZXing and  
FineReader
detects it.

If you want more error cases in scanned documents for testing I can provide  
them. But
I understand this project is centered on snapshots from mobile phones and  
might not
be a priority. Still, QR and Code39 detection have proven quite reliable  
for our project.

Thanks for your help.</comment>
		<comment id="4" date="2010-03-10 20:13:40" author="sro...@gmail.com">After reading the code (didn't write it originally) I see it makes the  
assumption that
the barcode is in the center of the image, which stops it from being  
recognized. I
relaxed this assumption and committed a change to Subversion.

it's still not decoding, but now it is due to not liking the contents of  
the code. I think
it is still missing some of the modules and the error correction is failing.

This ought to help, but not address this 100%. Unfortunately I don't think  
I personally
have time to investigate further on these but you're welcome to dig in to  
the code and
try to determine what the issue is.</comment>
		<comment id="5" date="2010-03-10 21:16:02" author="sro...@gmail.com">Also, if you are able to use QR codes instead, that would be much easier to  
decode.

You can also use this library first, and in the cases it doesn't decode,  
use the other one.</comment>
		<comment id="6" date="2010-03-10 22:13:43" author="fct.dev">I'm also pro QR codes, but we have hardware readers used for Code39 which  
support PDF417.

I've looked at the problem in the debugger and it seems like the detector  
skips the
first and last rows of data (binarization problem?). The PDF417 code might  
need some
update, it seems to recycle some legacy code from previous revisions which  
has been
improved since then.

I probably won't have time to work on the code myself, but I wonder if you  
could
leave the status as accepted or akin for someone who has the time to  
improve the
detector.

Thanks again.</comment>
		<comment id="7" date="2010-03-11 05:38:32" author="sro...@gmail.com">I don't see any obvious issues with how it samples. I'll leave it sitting  
around for a while.</comment>
		<comment id="8" date="2010-04-03 08:53:23" author="sro...@gmail.com">Issue 368 has been merged into this issue.</comment>
		<comment id="9" date="2010-04-03 18:03:12" author="sro...@gmail.com">Issue 366 has been merged into this issue.</comment>
		<comment id="10" date="2010-04-05 03:15:28" author="wajeehu">Hi, i am attaching an image which decodes into the following text.
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAQQAAAAAAAAAAAA
GAAAAAAAAAAAAAAAAAAAAAAAACCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAMSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAA
AAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAHPAAAAAAAAAAAAAAAAAAAAAAAAIBAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAHPAAAAAAAAAAAAAAAAAA
AAAAAAIBAAAAAAAAAAJHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA

i guess this is because the unicode characters are encoded into the  
barcode. the
finally got this string when i commented out correctErrors(codewords,  
erasures,
numECCodewords); statement in the decoder class and public DecoderResult
decode(BitMatrix bits) method. before commenting out the above statement i  
was
getting a formatexception. plus i have tried zxing with a simple 2d barcode  
and have
observed that where special characters are present the string is decoded in  
a wrong
format.

Regards,
Wajeeh
</comment>
		<comment id="11" date="2010-04-06 12:08:41" author="wajeehu">Hi,

we are evaluating zxing's pdf417 decoding capabilities, and so far we have  
not been
able to decode a single image. can anyone please help out in this as i have  
tried
everything to decode the adove provided image. any help will be appreciated  
thanks.

Regards,
Wajeeh Ullah</comment>
		<comment id="12" date="2010-04-06 01:23:37" author="sro...@gmail.com">I doubt it will decode images like the one you posted, but it will decode  
things like the images linked earlier in
this thread. I think you'll need to work on improving the detector if you  
really want it to work on images like that.</comment>
		<comment id="13" date="2010-04-06 16:46:08" author="fct.dev">wajeehu, from my tests, using the GlobalHistogramBinarizer instead of the
HybridBinarizer improves the detection rate with PDF417. But it still fails  
in many
cases where FineReader succeeds. Hope it helps.</comment>
		<comment id="14" date="2010-04-06 17:12:04" author="wajeehu">Thanks fct.dev, i tried with GlobalHistogramBinarizer but im getting better  
results
using HybridBinarizer. i tried decoding an image (also attached here ). i  
got the
following results.
byte[] =&gt; 65 74 55 48 48 48 48 48 48 48 49 53 48 85 65 65 65 65 65 67 65 70  
67 69 66
73 70 65 76 13 48 48 84 50 51 84 13 51 49 48 51 49 48 48 48 48 48 48 6 45 6  
69 6 47 6
32 43 13 29 -61 -128 0 0 0 0 0 0 0 0 0 0 0 0 0 0 28 -61 -71 14 70 0 0 0 0 0  
98 32 38
-61 -93 -62 -127 25 68 6 71 6 32 51 6 0 0 0 0 3 26 13 51 6 68 6 -61 -116 6  
69 6 32 39
6 0 0 0 0 3 70 68 6 13 69 6 -62 -87 6 39 6 70 6 32 0 0 0 0 0 62 49 6 32 49  
48 53 12 6
-62 -81 6 68 6 0 0 0 0 0 -61 -123 6 68 6 -61 -127 6 32 49 49 6 -61 -116 6  
51 0 0 0 0
1 -61 -90 49 6 50 -61 -68 114 -62 -102 49 6 39 6 72 6 69 56 46 118 118 -62  
-66 -62 -
120 6 -61 -116 6 12 6 13 13 49 6 39 6 0 0 0 0 0 14 69 -61 -111 16 -62 -74  
-61 -123 70
0 0 0 0 0 0 13 32 32 32 32 32 32 48 48 48 48 48 48 48 48 32 32 32 32 48 48  
32 32 32
32 32 32 32 32 32 32 32 32 32 32 32 32 48 48 48 48 48 48 47 94 32 32 32 32  
32 32 32
32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 48 48 48 48 48 48 48 48 32 32  
32 32 32
32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 48 48 48 48 48 48 48 48  
32 32 32
32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 48 48 48 48 48 48  
48 48 32
32 32 32 48 48 32 32 32 32 32 32 32 32 32 32 32 32 32 32 48 48 48 48 48 48  
48 48 48
48 32 32 32 32 48 48 32 32 32 32 32 32

Text Result =&gt;
AJ70000000150UAAAAACAFCEBIFAL00T23T31031000000 - E /  + Ã</comment>
		<comment id="15" date="2010-04-06 17:16:08" author="wajeehu">i cant attach the image as it says  "Issue attachment storage quota  
exceeded." :)</comment>
		<comment id="16" date="2010-04-06 18:14:21" author="sro...@gmail.com">Issue 375 has been merged into this issue.</comment>
		<comment id="17" date="2010-04-12 22:25:51" author="jwi...@baycomp.com">The issue is that there is a bug in
com.google.zxing.pdf417.decoder.numericCompaction so that it does not  
decode numeric
data properly.  Specifically, as currently written it doesn't decode when  
the
numeric data terminates.  Here is one possible fix:

private static int numericCompaction(int[] codewords, int codeIndex,  
StringBuffer
result) {
     int count = 0;
     boolean end = false;

     int[] numericCodewords = new int[MAX_NUMERIC_CODEWORDS];

     while ((codeIndex &lt; codewords[0]) &amp;&amp; !end) {
       int code = codewords[codeIndex++];
          if(codeIndex == codewords[0])
         end = true;
       if (code &lt; TEXT_COMPACTION_MODE_LATCH) {
         numericCodewords[count] = code;
         count++;
       } else if ((code == TEXT_COMPACTION_MODE_LATCH) ||
                            (code == BYTE_COMPACTION_MODE_LATCH) ||
                            (code == BYTE_COMPACTION_MODE_LATCH_6) ||
                            (code == BEGIN_MACRO_PDF417_CONTROL_BLOCK) ||
                            (code == BEGIN_MACRO_PDF417_OPTIONAL_FIELD) ||
                            (code == MACRO_PDF417_TERMINATOR)) {
                codeIndex--;
                end = true;
       }
       if (((count % MAX_NUMERIC_CODEWORDS) == 0) ||
           (code == BYTE_COMPACTION_MODE_LATCH) || end) {
         // Re-invoking Numeric Compaction mode (by using codeword 902
         // while in Numeric Compaction mode) serves  to terminate the
         // current Numeric Compaction mode grouping as described in 5.4.4.2,
         // and then to start a new one grouping.
         String s = decodeBase900toBase10(numericCodewords, count);
         result.append(s);
         count = 0;
       }
     }
     return codeIndex;

   }</comment>
		<comment id="18" date="2010-04-12 23:56:17" author="sro...@gmail.com">Thanks, I can commit this fix. Which is a test image that works only after  
this change, so I can add a unit test?</comment>
		<comment id="19" date="2010-04-13 01:38:53" author="sro...@gmail.com">One bit I don't understand is: codeIndex &lt; codeWords[0] instead of  
codeIndex &lt; codeWords.length  -- index is
an offset into the array right?</comment>
		<comment id="20" date="2010-04-13 02:21:38" author="jwi...@baycomp.com">Oops.  I see that I have an artifact from previous testing:
BYTE_COMPACTION_MODE_LATCH in the final if test should be
NUMERIC_COMPACTION_MODE_LATCH

"index is an offset into the array right?"
Yes, but if you look for example at textCompaction, you will also see this  
test,
because you don't want to decode the error-correction codes at the end.

I was using a sample for testing on which the detector failed, so I had to  
hard-code
the vertices (and it is from my work, and so may be proprietary).  The bug  
will show
up on any barcode that uses numericCompaction (since the  
decodeBase900toBase10 is
not called for the "final" grouping; the original code would only work when  
the data
starts and ends with NUMERIC_COMPACTION_MODE_LATCH.</comment>
		<comment id="21" date="2010-04-13 06:44:44" author="sro...@gmail.com">You know this code better than I do at this point -- may not be able to  
construct a test case on my own but am
willing to take your word for it. if you're an active user and this is  
improving the result, good. Also I wonder if
byteCompaction has the same sort of issue? I wonder because I see it has  
that same curious large empty if
statement, which I suspect is intended to include the two lines that follow  
as its body (as your change does). I'm
inclined to fix that, not even knowing more about this</comment>
		<comment id="22" date="2010-04-13 22:25:06" author="jwi...@baycomp.com">You're right.  There was an additional problem of a misplaced closing  
bracket in
the "large if" statement in numericCompaction, so that the body of the ifs  
only
contain the
    codeIndex--;
statement and not the
    end = true;
statement, as well.  This same bug appears twice in byteCompaction, and  
should be
fixed.</comment>
		<comment id="23" date="2010-04-20 01:25:56" author="sro...@gmail.com">Here's my latest patch (now can attach since our quota has been increased)  
-- is this roughly what you have in
mind? It passes whatever tests we have and I'd be willing to commit if one  
more glance doesn't reveal an obvious
issue.</comment>
		<comment id="24" date="2010-04-20 02:05:54" author="jwi...@baycomp.com">Not quite.  The "end = true;" statement needs to be inside all the if  
blocks in
byteCompaction and numericCompaction.  What's going on, is that the code at  
the
current index is indicating a termination of the previous decompression  
(i.e., "un-
compaction") method, the index is backing up so the code will be re-read by  
the
caller to invoke the correct decompression routine.</comment>
		<comment id="25" date="2010-04-20 05:58:45" author="sro...@gmail.com">OK committed the fix, thank you, and credit you in AUTHORS. This may be as  
close to a fix as this issue will see
so resolving it.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="33bbcab859c1054f850bdd2884b4ead77ab6e330" author="srowen" date="2010-04-20 05:49:54"/>
          <file name="core/src/com/google/zxing/pdf417/decoder/DecodedBitStreamParser.java">
              <method name="byteCompaction" returnType="int" parameters="int int[] int StringBuffer"/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="411" opendate="2010-05-19 08:05:08" fixdate="2010-05-19 11:05:59">
    <buginformation>
      <summary>IllegalArgumentException; message=Both dimensions must be greater than 0</summary>
      <description>1. 
2. 
3. 


 
Latest checked out on May 18th on Windows &amp; Linux 
 

Code attached 
Images where the error occured
</description>
      <comments>
		<comment id="1" date="2010-05-20 12:49:39" author="beanster.v">Complete code
</comment>
		<comment id="2" date="2010-05-20 12:55:56" author="beanster.v">public static Collection&lt;Result&gt; scanBarcodes(LuminanceSource source) is the
function that generates the error.</comment>
		<comment id="3" date="2010-05-20 01:12:54" author="sro...@gmail.com">Thanks, I'll look into this more. Should be easy to avoid this.

java.lang.IllegalArgumentException: Both dimensions must be greater than 0
        com.google.zxing.common.BitMatrix.&lt;init&gt;(BitMatrix.java:49)
        com.google.zxing.common.BitMatrix.&lt;init&gt;(BitMatrix.java:44)
        com.google.zxing.qrcode.QRCodeReader.extractPureBits(QRCodeReader.java:150)
        com.google.zxing.qrcode.QRCodeReader.decode(QRCodeReader.java:69)
        
com.google.zxing.MultiFormatReader.decodeInternal(MultiFormatReader.java:156)
        com.google.zxing.MultiFormatReader.decode(MultiFormatReader.java:64)
        com.google.zxing.web.DecodeServlet.processStream(DecodeServlet.java:316)
        com.google.zxing.web.DecodeServlet.doGet(DecodeServlet.java:212)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        com.google.zxing.web.DoSFilter.doFilter(DoSFilter.java:72) </comment>
		<comment id="4" date="2010-05-20 03:37:07" author="sro...@gmail.com">Should be fixed in SVN now</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="cd06f524d8feef815ad6a4a658fc477cd9f010ee" author="srowen" date="2010-05-20 03:36:59"/>
          <file name="core/src/com/google/zxing/qrcode/QRCodeReader.java">
              <method name="extractPureBits" returnType="BitMatrix" parameters="BitMatrix"/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="412" opendate="2010-05-19 14:05:00" fixdate="2010-05-21 06:05:44">
    <buginformation>
      <summary>ArithmeticException; message=/ by zero</summary>
      <description>1. Use the following function from code attached with the image attached 
2. public static Collection&lt;Result&gt; scanBarcodes(LuminanceSource source) 
3. see the catch ArithmeticException, that is where the exception occurs 
 

 
Checked out as of May 18th, 2010 
 

Code and the image file attached</description>
      <comments>
		<comment id="1" date="2010-05-20 18:13:37" author="sro...@gmail.com">Also easy to fix.

You're running into corner-cases in the "pure barcode" mode. This maybe not  
surprising
since these images aren't a pure barcode, let alone contain a barcode!

Why are you using pure barcode mode though? This shouldn't be needed.</comment>
		<comment id="2" date="2010-05-20 19:55:16" author="sro...@gmail.com"></comment>
		<comment id="3" date="2010-05-21 22:00:04" author="beanster.v">I am using the scanning in batch mode. Only the separator pages would have  
barcodes.
Majority of the pages that I scan do not have any barcode.</comment>
		<comment id="4" date="2010-05-21 22:04:11" author="beanster.v">BTW. Thank you for fixing those issues so quick.</comment>
		<comment id="5" date="2010-05-21 22:40:17" author="sro...@gmail.com">If they're scans, even if the pages are really clean scans, you may not want
PURE_BARCODE. It gets thrown off easily if it's not actually a pure,  
exactly oriented
image. I would just set TRY_HARDER. But hey if you tried it and it worked  
better, go
ahead. </comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="a189e6c00c836d02d976c0af1782d0e83bc34222" author="srowen@gmail.com" date="2010-05-20 07:50:34"/>
          <file name="core/src/com/google/zxing/qrcode/QRCodeReader.java">
              <method name="extractPureBits" returnType="BitMatrix" parameters="BitMatrix"/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="407" opendate="2010-05-17 20:05:08" fixdate="2010-05-27 01:05:54">
    <buginformation>
      <summary>Update broke app on my Incredible?</summary>
      <description>1. Open app 
2. Won't scan a barcode other than QRCode 

What is the expected output? Used to scan everything up close 

What do you see instead? Instant zoom and constantly trying to focus and 
doesn't focus into barcode 

What version of the product are you using? 51 

On what operating system? HTC Sense Android 2.1 

 

Before the 51 update, I could scan any barcode at a close distance. I 
noticed a new behavior with v51 - when I open the app it automatically 
zooms the camera. 

I think the problem I am having is that it's too far zoomed in, so when it 
tries to focus, it can't because barcodes are not clear enough to scan, 
unless I hold them about 9-12" away, and at that point the app gets 
confused with other product lines on the packaging. 

I'm not technical when it comes to programming apps, but I wanted to let 
you know that I haven't been able to use this app on my HTC Incredible 
since upgrading to the 51 version, and think the zoom or focus is the 
problem.</description>
      <comments>
		<comment id="1" date="2010-05-18 16:10:55" author="fjt999">Similar problem on MyTouch3G, android 1.6 stock T-Mobile version. App  
worked great
until last update now auto-focus keeps trying to focus on barcode (QR on  
screen from
market and book UPC used as test) and won't read it, but most times if I go  
into the
app's menu and change a setting (enable or disable 1D codes for example) it  
will then
scan and read the barcode. Problem seems independent of code being scanned.</comment>
		<comment id="2" date="2010-05-18 18:19:16" author="sro...@gmail.com">This seems specific to new, Sense-based devices -- have heard this in  
regards the
MyTouch too. For example the N1 is fine, and a Hero with 1.5 is fine.
I think we have a workaround so anyone willing to try a new build can  
contact me off-
list. </comment>
		<comment id="3" date="2010-05-19 12:23:16" author="r...@google.com">Update to 3.3 broke most QR scanning on my Droid (2.1).  It continuously  
zooms in and out.  It's in focus at
times, and even puts green highlights on the big corner squares, but seems  
hung in an infinite loop.  This
happens for Google business card I got at the ISEF in San Jose last week,  
and a Google add on the back cover of
Business Week.  I tried in various lighting conditions, but no change.  It  
did work on a BTWD poster at Google HQ,
though.

There are lots of comments about the problem in the Android Market reviews.</comment>
		<comment id="4" date="2010-05-20 23:47:26" author="sro...@gmail.com">Issue 413 has been merged into this issue.</comment>
		<comment id="5" date="2010-05-27 16:18:57" author="dgingrich">Similar issue reported on reddit
(http://www.reddit.com/r/Android/comments/c8gl3/barcode_scanner_doesnt_work_on_cyanogenmod_v507/).

My fix (which worked for others) was to go into Settings and not change  
anything.
Scanning worked after exiting from Settings.

Info:
Phone: HTC Dream/G1 rooted
Barcode Scanner: v51
Mod: CyanogenMod-5.0.7-DS
Build number: EPE54B</comment>
		<comment id="6" date="2010-05-27 17:29:35" author="sro...@gmail.com">It's not actually related. It's a race condition in restarting the scanning  
activity. Anything which restarts it spins
the roulette wheel again.

Marking fixed since 3.3.1 beta is up and appears to fix this on all  
affected devices.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="a0ecb24f54ab1ee479ccfb6c108b98890c121cd5" author="dswitkin" date="2010-05-27 01:58:15"/>
          <file name="android/src/com/google/zxing/client/android/HelpActivity.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="432" opendate="2010-06-03 14:06:19" fixdate="2010-06-03 14:06:51">
    <buginformation>
      <summary>UTC is not GMT + 1</summary>
      <description>com.google.zxing.web.generator.client.TimeZoneList lines 44 and 45 currently read: new TimeZoneInfo("GMT", "Greenwich Mean Time", "GMT", 0 * ONE_HOUR + 0 * THIRTY_MIN), // 0 new TimeZoneInfo("UTC", "Universal Coordinated Time", "GMT", 1 * ONE_HOUR + 0 * THIRTY_MIN), The second line is incorrect as UTC is (as the "relative" field correctly indicates) equivalent to GMT at this level of precision.</description>
      <comments>
		<comment id="1" date="2010-06-04 07:04:56" author="sro...@gmail.com">Cool, fixed.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="f42a6d26feaadcc39b2180ead08fe0f9fbb73948" author="srowen" date="2010-06-04 06:59:41"/>
          <file name="zxing.appspot.com/generator/src/com/google/zxing/web/generator/client/TimeZoneList.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="363" opendate="2010-03-26 07:03:54" fixdate="2010-06-21 06:06:11">
    <buginformation>
      <summary>App stops scanning barcodes if power button is pressed while barcode information is displayed</summary>
      <description>1. Scan a QR address code
2. While the "Found contact info" dialog is visible, tap the power button
to put the phone in standby mode (NOTE: apologies; I don't know the
technical term for the mode but I'm referring to "the mode where you can
put the phone in your pocket; it's still on but the UI won't respond until
you press the top button again and enter your login pattern")
3. Tap the power button again to display the phone's login pattern screen
4. Enter login pattern. The barcode app reappears, but the "Found contact
info dialog is not visible.
5. Attempt to scan a barcode; the barcode will not scan. It is as if the
program thinks the dialog is still open, but the dialog is not visible.


When the phone awakens from standby and I log in, I expect to be returned
to the barcode dialog screen that was previously visible.

Barcode Scanner v3.21, Nexus One, Kernel 2.6.29-01117-g4bc62c2
</description>
      <comments>
		<comment id="1" date="2010-03-26 23:25:49" author="dswit...@google.com">Good bug, thanks!</comment>
		<comment id="2" date="2010-03-27 03:01:41" author="sro...@gmail.com">Most of what you describe is by design, though we could change it. In  
general the
app always returns you to the scanning screen when it comes back, from  
sleep or
another app or anything. This avoids some confusing situations where, for  
example,
the user left while picking a contact to share. Coming to BS and seeing  
contacts is
odd.

I think we could remove this behavior in this one case though, for the case  
of the
Intent that shows scan results. Daniel thoughts?

I wasn't able to reproduce the rest of this though, I was able to scan and  
rescan the
same code after waking, without trouble. I'm on a Hero.</comment>
		<comment id="3" date="2010-03-27 04:46:11" author="dswit...@google.com">I did repro this on Nexus. What happens is you go back to the scanning  
screen but autofocus isn't running and
image processing does not appear to be running. This is a genuine bug.</comment>
		<comment id="4" date="2010-06-21 08:09:21" author="sro...@gmail.com">The core issue here is part 5 from the OP. Daniel do you think your last  
change for Acer fixed this one?</comment>
		<comment id="5" date="2010-06-21 22:59:41" author="dswit...@google.com">Yup this is exactly the case I fixed.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="b94d44c5a1fe45c0874fa87b96d9fb00aeacbfa4" author="dswitkin@google.com" date="2010-06-19 01:17:12"/>
          <file name="android/src/com/google/zxing/client/android/CaptureActivity.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/CaptureActivityHandler.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/CameraConfigurationManager.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="475" opendate="2010-07-17 01:07:12" fixdate="2010-07-17 03:07:47">
    <buginformation>
      <summary>Incorrect comment in Intent Class</summary>
      <description>The source code for the Intents class in the Android app has the following  
comment in WifiConnect:

   public static final class WifiConnect {
         /**
          * Use Google Book Search to search the contents of the book  
provided.
          */
         public static final String ACTION  
= "com.google.zxing.client.android.WIFI_CONNECT";


A comment that is about Wifi not book search


Latest SVN
</description>
      <comments>
		<comment id="1" date="2010-07-17 19:40:32" author="sro...@gmail.com">Sure, fixed.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="0b0c051d5fdd0236f98ab90334119d7585e37858" author="srowen" date="2010-07-17 07:39:34"/>
          <file name="android/src/com/google/zxing/client/android/Intents.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="469" opendate="2010-07-07 00:07:42" fixdate="2010-07-31 08:07:54">
    <buginformation>
      <summary>J2SE Reader not recognize code</summary>
      <description>I use zxing for J2SE to detect large QRCODE code does not always recognize,  
but rather rare, often "com.google.zxing.NotFoundException"
Code
  LuminanceSource source = new BufferedImageLuminanceSource (image);
     BinaryBitmap bitmap = new BinaryBitmap (new
HybridBinarizer (source));
     Result result;
     try (
       result = new MultiFormatReader (). decode (bitmap);
     ) Catch (ReaderException re) (
       return re.toString ();
     )
     return result.getText ();</description>
      <comments>
		<comment id="1" date="2010-07-07 17:34:17" author="sro...@gmail.com">Use the TRY_HARDER hint and it decodes fine. You can see this working by  
uploading to http://zxing.org/w/decode.jspx. It says:

&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;xfa:data  
xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" &gt;&lt;root &gt;&lt;metadata  
&gt;&lt;region &gt;1234&lt;/region &gt;&lt;id &gt;4&lt;/id &gt;&lt;email &gt;apana...@diasoft.ru&lt;/email  
&gt;&lt;mail_notice &gt;1&lt;/mail_notice &gt;&lt;telefon /&gt;&lt;sms_notice &gt;0&lt;/sms_notice  
&gt;&lt;password &gt;0000&lt;/password &gt;&lt;/metadata &gt;&lt;data &gt;&lt;question1  
&gt;ÑÐ°ÐºÑÑÑÐ¾&lt;/question1 &gt;&lt;question2 &gt;ÐÐ°Ð½Ð°ÑÐ¾Ð²Ð¸Ñ ÐÐ»ÐµÐºÑÐ°Ð½Ð´Ñ&lt;/question2 &gt;&lt;question3  
&gt;Ð¿Ð¾ÑÑÐ°Ð²Ð¸ÑÑ Ð½Ð° ÑÑÐµÑ&lt;/question3 &gt;&lt;question4 &gt;Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ&lt;/question4  
&gt;&lt;question5 &gt;ÐÐ°Ð½Ð°ÑÐ¾Ð²Ð¸Ñ ÐÐ»ÐµÐºÑÐ°Ð½Ð´Ñ ÐÐ°ÑÐ¸Ð»ÑÐµÐ²Ð¸Ñ&lt;/question5 &gt;&lt;question6  
&gt;2010-06-25&lt;/question6 &gt;&lt;question7 &gt;Ð¿Ð°ÑÐ¿Ð¾ÑÑ&lt;/question7 &gt;&lt;question8  
&gt;Ð Ð¾ÑÑÐ¸Ñ&lt;/question8 &gt;&lt;question9 &gt;ÐÐµÐ»Ð°ÑÑÑÑ&lt;/question9 &gt;&lt;question10  
&gt;2&lt;/question10 &gt;&lt;question11 &gt;111111111111&lt;/question11 &gt;&lt;question12  
&gt;11111111&lt;/question12 &gt;&lt;question13 &gt;1111&lt;/question13 &gt;&lt;question14  
&gt;Ð¼Ð°ÑÐ¸Ð½Ð°&lt;/question14 &gt;&lt;question15 &gt;ÐÐ¾ÑÐ¾ÑÐ¸ÐºÐ»&lt;/question15 &gt;&lt;question16  
&gt;Ð·Ð°Ð²Ð¾Ð´&lt;/question16 &gt;&lt;question17 &gt;4&lt;/question17 &gt;&lt;question18 &gt;Ð¸ÑÐ½Ñ  
2010&lt;/question18 &gt;&lt;question19 &gt;Ð¼Ð°ÑÐ¸Ð½Ð°&lt;/question19 &gt;&lt;question20  
&gt;111111111111.00000000&lt;/question20 &gt;&lt;question21  
&gt;44444444.00000000&lt;/question21 &gt;&lt;question22 &gt;444444&lt;/question22  
&gt;&lt;question23 &gt;33333333&lt;/question23 &gt;&lt;question24 &gt;333.00000000&lt;/question24  
&gt;&lt;question25 &gt;33.00000000&lt;/question25 &gt;&lt;question26 &gt;33.00000000&lt;/question26  
&gt;&lt;question27 &gt;333&lt;/question27 &gt;&lt;question28 &gt;ï¾ï¿½ï½¼ï¾ï¿½ï¿½ï½¼ï¾ï½¸&lt;/question28  
&gt;&lt;question29 &gt;333.00000000&lt;/question29 &gt;&lt;question30 /&gt;&lt;question31  
/&gt;&lt;question32 /&gt;&lt;question33 /&gt;&lt;question34 /&gt;&lt;question35 /&gt;&lt;/data &gt;&lt;/root  
&gt;&lt;/xfa:data &gt; </comment>
		<comment id="2" date="2010-07-07 19:08:04" author="panason2010">I'm trying to identify a site

HTTP Status 500 -

type Exception report

message

description The server encountered an internal error () that prevented it  
from fulfilling this request.

exception

java.lang.ArithmeticException: / by zero
        com.google.zxing.qrcode.QRCodeReader.extractPureBits(QRCodeReader.java:133)
        com.google.zxing.qrcode.QRCodeReader.decode(QRCodeReader.java:69)
        
com.google.zxing.MultiFormatReader.decodeInternal(MultiFormatReader.java:156)
        com.google.zxing.MultiFormatReader.decode(MultiFormatReader.java:64)
        com.google.zxing.web.DecodeServlet.processStream(DecodeServlet.java:316)
        com.google.zxing.web.DecodeServlet.doPost(DecodeServlet.java:245)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        com.google.zxing.web.DoSFilter.doFilter(DoSFilter.java:72)
note The full stack trace of the root cause is available in the Apache  
Tomcat/6.0.26 logs.

Apache Tomcat/6.0.26</comment>
		<comment id="3" date="2010-07-07 19:11:33" author="panason2010">What do you mean "Use the TRY_HARDER hint" ?</comment>
		<comment id="4" date="2010-07-07 20:35:20" author="sro...@gmail.com">The error looks like something fixed a while ago. I think I just need to  
update the web site's code.

See DecodeHintType. You want to use something like:

Hashtable hints = new Hashtable();
hints.put(DecodeHintType.TRY_HARDER, Boolean.TRUE);

and then pass this hints object to the decode method.</comment>
		<comment id="5" date="2010-07-07 21:11:04" author="panason2010">I did as you said and probyval raspoznovat many times.
Anyway, on large code does not work stably
notretsognize-not recognized
retsognize-Read
</comment>
		<comment id="6" date="2010-07-07 23:28:13" author="sro...@gmail.com">Yes these are going to be hard to read. I don't think its realistic to use  
QR codes with that much teext.</comment>
		<comment id="7" date="2010-07-09 14:45:45" author="panason2010">I need to recognition of large codes (more than 2000 characters), and he  
made them in AdobeLiveCycle. Recommend the optimum size of the code (the  
parameters of creation of the CD code), for better recognition by means of  
your library. Thank you in advance.</comment>
		<comment id="8" date="2010-07-09 17:34:40" author="sro...@gmail.com">I would stick to a couple hundred characters, ideally.
I notice that the data inside it is very verbose XML. You probably want to  
choose a more compact representation. The same data is probably only a  
couple hundred bytes.
You could also compress the data, and modify the encoder to accept a byte  
array directly. The decoder would likewise need to access the raw byte[]  
content rather than String.</comment>
		<comment id="9" date="2010-07-14 18:54:46" author="panason2010">Could you provide will make both with the help of your library to encode  
and decode the byte array</comment>
		<comment id="10" date="2010-07-14 19:29:19" author="sro...@gmail.com">Sorry what is your question?</comment>
		<comment id="11" date="2010-07-14 19:35:27" author="panason2010">Sorry for my English))
How to convert byte[] -&gt; QRcode and back, using your library?</comment>
		<comment id="12" date="2010-07-14 20:23:25" author="sro...@gmail.com">You need to modify the encoder to accept a byte[] directly, rather than a  
String. You can find the point where it has already converted the String to  
byte[], and instead inject a byte[] directly.

The decoder can likewise be modified.</comment>
		<comment id="13" date="2010-07-14 21:38:18" author="jeanclau...@free.fr">I have the same kind of problem, I use zxing for J2SE to generate file, but  
in some strange case, it's not able to decode back it's own generated file.  
I have attached a java test file which was tested with trunk version.
For the same coded Text, the problem occurs when image's resolution is  
increased.

I hope it could help
</comment>
		<comment id="14" date="2010-07-14 22:19:13" author="sro...@gmail.com">You need to use PURE_BARCODE hint to reliably decode images like this. The  
library is expecting something more like a photo.</comment>
		<comment id="15" date="2010-07-15 12:06:32" author="jeanclau...@free.fr">I have tryed with hint PURE_BARCODE (in StringToImage.java), this time  
test(0) and test(928) are not working.
Hint just moves the problem to an other image resolution.
How is possible that perfect image can not be decoded ?
Called 'perfect' because it's not scanned image but image generated by  
zxing.</comment>
		<comment id="16" date="2010-07-15 02:51:10" author="sro...@gmail.com">Can you post an image that is not decoding? I am surprised if PURE_BARCODE  
doesn't work.
The answer is that a pure image has a lot more regions that look like a  
finder pattern, so many many more chances for a false positive in that  
phase.</comment>
		<comment id="17" date="2010-07-15 05:10:03" author="jeanclau...@free.fr">I have attached some files which should not work.
out_test_0.png =&gt; ChecksumException
out_test_57.png  =&gt; ChecksumException
out_test_1207.png  =&gt; NotFoundException

I have changed my StringToImage.java file to use QRCodeReader (and not  
MultiFormatReader)
</comment>
		<comment id="18" date="2010-07-15 05:53:35" author="sro...@gmail.com">The first two are indeed a corner-case problem. I just fixed it.
The last one is very strange. It seems like the PNG isn't read correctly,  
since white pixels appear near the top-left corner where there should be  
none and it's thrown off. I have no idea what's going on there to be honest.
It's not a problem with the decoder per se since you can read any of these  
off the screen correctly. The latter may be some strange image parsing  
problem. As it's a real corner case I am not sure I personally would  
investigate it further.</comment>
		<comment id="19" date="2010-07-15 6:43:27" author="jeanclau...@free.fr">I have taken new trunk version and it solves problem for previous test0 and  
test57.
But some strange thing still happens.
So, I have put more file which are not working, particularly test_1102  
which generates a exception at  
QRCodeReader.extractPureBits(QRCodeReader.java:137)

The other files generate ChecksumException.
</comment>
		<comment id="20" date="2010-07-15 16:31:29" author="sro...@gmail.com">Yeah like I said, you're welcome to investigate more, though it almost  
looked like a problem in the image reader to me. Very strange. I myself  
probably won't look into this more.</comment>
		<comment id="21" date="2010-07-30 04:44:17" author="jeanclau...@free.fr">I have read the source code and i have found the bug!
In HybridBinarizer class, in threshold8x8Block function, the code (pixel &lt;  
threshold) must be replaced by (pixel &lt;= threshold)    (less or EQUALS)
Why. because when a large full black aerea is analysed, threshold is  
calculted to zero but threshold8x8Block never set black into matrix as 0 is  
not 'less than' 0 .It should be 'less than or equals'. I have tested it  
with my test case, it works better, otherwise full black area are  
considered as white.</comment>
		<comment id="22" date="2010-07-30 04:52:31" author="sro...@gmail.com">I see what you are saying, but isn't this just creating the opposite "bug"?  
Imagine what happens in an all white region. Either way you have such an  
issue, and it is an issue. The question is which way is better in practical  
situations. Try the change, then run the unit tests again to see how many  
more or fewer images pass.</comment>
		<comment id="23" date="2010-07-30 05:01:40" author="jeanclau...@free.fr">In White region, there is already a check which says,
  int average = (max - min &gt; 24) ? (sum &gt;&gt; 6) : (min &gt;&gt; 1);
So in white region average is 255&gt;&gt;1 =&gt; 128 So it will work because (pixel  
&gt; threshold) is never true for 128=&lt;255 =&gt; So matrix is not set to black.  
That's ok for me</comment>
		<comment id="24" date="2010-07-30 05:05:47" author="jeanclau...@free.fr">In White region, there is already a check which says,
  int average = (max - min &gt;&gt; 24) ? (sum &gt;&gt; 6) : (min &gt;&gt; 1);
So in white region average is 255&gt;&gt;1 =&gt; 128 So it will work because (pixel  
&gt; threshold) is never true for 255=&gt;128 =&gt; So matrix is not set to black.  

That's ok for me</comment>
		<comment id="25" date="2010-07-30 05:10:04" author="jeanclau...@free.fr">In White region, there is already a check which says,
  int average = (max - min &gt; 24) ? (sum &gt;&gt; 6) : (min &gt;&gt; 1);
So in white region average is 255&gt;&gt;1 ---&gt; 127 So it will work because  
(pixel &lt; threshold) is never true for 255&gt;=127 =&gt; So matrix is not set to  
black. That's ok for me</comment>
		<comment id="26" date="2010-07-30 13:28:51" author="sro...@gmail.com"></comment>
		<comment id="27" date="2010-07-30 14:57:17" author="panason2010">Your changes have not yielded significant improvements. All the codes that  
I sent you, also not recognized. Tell me whether to recognize effect zoom in
"Windows Picture and fax Viewer"?</comment>
		<comment id="28" date="2010-07-30 15:34:39" author="jeanclau...@free.fr">Hello Panason, i tried to decoded your picture code.jpg, it was not working.
In my point of view, I'm not sure that code is managing small rotation of  
picture.
Your picture is not well horizontal, and it's large picture. Maybe ?
There is no log.debug in sources. but I got the message for corner point :
  point found: (773.0,22.0)
  point found: (109.0,33.0)
  point found: (286.5,447.5)
In source comments, corner are expected in 3 modules in size .
     // Look for an alignment pattern (3 modules in size) around where it
     // should be
The question is: Does source code rotate image to get a perfect horizontal?  
(for me not) but i have to read source code...</comment>
		<comment id="29" date="2010-07-31 03:15:42" author="jeanclau...@free.fr">IF code.jpg is a bit rotated, it can be managed and decoded. The result is  
a long string :

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xfa:data xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"
&gt; &lt;root
&gt; &lt;metadata
&gt; &lt;region
&gt; 1234&lt;/region
&gt; &lt;id
&gt; 4&lt;/id
&gt; &lt;email
&gt; apanasovic........</comment>
		<comment id="30" date="2010-07-31 05:02:10" author="sro...@gmail.com">This change makes loads of other images fail unfortunately. I think it's  
there for a reason.
But if it works for you, you can use that modification locally for your own  
app of course.

Rotation is not the reason there is an issue here.</comment>
		<comment id="31" date="2010-07-31 05:18:41" author="smpar...@smparkes.net">Do you mean the "pixel &lt; threshold" vs "pixel &lt;= threshold" change, Sean? I  
stumbled upon the same idea a while ago when dealing with pure data images  
(was trying to avoid knowing which I had ahead of time). Without that  
change, the hybrid binarizer drills white holes in black regions like the  
alignment patterns.

Guess I need to get the tests running under CI ...</comment>
		<comment id="32" date="2010-07-31 18:03:44" author="jeanclau...@free.fr">If previous modification is a problem for some kind of your testcases, an  
other more secured way consists in improving the average formula in case of  
black area.
for the moment its:

  int average = (max - min &gt; 24) ? (sum &gt;&gt; 6) : (min &gt;&gt; 1);

but its not working as average must be greater than color. In black area,  
calculated average is 0. Zero can not used as average. Dividing 'sum' by 64  
or 'min' by 2 it's returning 0 as average which will be misused by  
HybridBinarizer. This bug should occured when resolution of picture is more  
than 8 pixels by black spot.(hight quality image)

Formula can be easily improved like:
  int average = (max - min &gt; 24) ? (sum &gt;&gt; 6) : (max&gt;0 ? min &gt;&gt; 1 : 1);

There are a lot of simple way for not badly ignoring black area.
The last one  with  (max&gt;0 ? min &gt;&gt; 1 : 1) is working for me and should not  
annoy other kind of pictures because the change is used only when max=0.
This case it's for very very very black zone. It's good for pure_barcode.  
But it's not helping for not PURE which may have the same problem.</comment>
		<comment id="33" date="2010-08-01 12:11:44" author="sro...@gmail.com">OK I'll commit this. It doesn't seem to affect unit tests. The logic makes  
sense; this change is a pretty conservative step.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="6b5616e7dd11afc3fbf2904f439ae2b1111006f5" author="srowen" date="2010-08-01 12:07:16"/>
          <file name="core/src/com/google/zxing/common/HybridBinarizer.java">
              <method name="calculateBlackPoints" returnType="int[][]" parameters="byte[] int int int"/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="512" opendate="2010-08-10 22:08:21" fixdate="2010-08-11 06:08:53">
    <buginformation>
      <summary>ITFWriter throws ArrayIndexOutOfBoundsException</summary>
      <description>MultiFormatWriter w = new MultiFormatWriter();
BitMatrix bm = w.encode("213432546576878", BarcodeFormat.ITF, 200, 25);



Stack trace:
java.lang.ArrayIndexOutOfBoundsException: 6
         at com.google.zxing.oned.ITFWriter.encode(ITFWriter.java:57)
         at com.google.zxing.oned.UPCEANWriter.encode(UPCEANWriter.java:50)
         at com.google.zxing.oned.ITFWriter.encode(ITFWriter.java:40)
         at  
com.google.zxing.MultiFormatWriter.encode(MultiFormatWriter.java:62)
         at  
com.google.zxing.MultiFormatWriter.encode(MultiFormatWriter.java:40)



rev 1516 from svn tree



The following code cannot be correct, since ITFReader.PATTERNS inner array  
is always 5 entries in the second dimension.

       for (int j = 0; j &lt; 10; j += 2) {
         encoding[j] = ITFReader.PATTERNS[one][j];
         encoding[j + 1] = ITFReader.PATTERNS[two][j];
       }

was the following instead the intention?

       for (int j = 0; j &lt; 5; j ++) {
         encoding[j*2] = ITFReader.PATTERNS[one][j];
         encoding[j*2 + 1] = ITFReader.PATTERNS[two][j];
       }</description>
      <comments>
		<comment id="1" date="2010-08-11 22:47:30" author="sro...@gmail.com"></comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="14712eff37fb64987d751a04fde8c59a961e0843" author="srowen" date="2010-08-11 10:42:39"/>
          <file name="core/src/com/google/zxing/oned/ITFWriter.java">
              <method name="encode" returnType="byte[]" parameters="String"/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="511" opendate="2010-08-10 18:08:12" fixdate="2010-08-12 13:08:34">
    <buginformation>
      <summary>module size estimation is slightly inaccurate</summary>
      <description>There are some subtle problems with the estimation of module size. Greatest  
impact is on low resolution (low pixel-per-module) images, particularly for  
larger codes.

I actually came across this when looking at 510. blackbox/qrcode-2/11.gif  
was causing core dumps in C++ but no unexpected exceptions in Java.

The issue in 510 was that the C++ code wasn't handling a difference between  
the estimated dimension of the image and what was encoded in the version.

Easy enough to fix (adding the check and throwing an exception as the Java  
code does) but it did make me wonder why 11.gif wasn't getting decoded.

It turns out that the existing module estimation code doesn't estimate the  
module size quite right. The module size in the 11.gif is 2 pixels but gets  
estimated at something less (1.8 if I recall). This causes the dimension to  
be 69 rather than the true 65.

The only thing required to fix this was moving around the -1s. I looked at  
all the places where it was calculating incorrect values on 11.gif (in the  
black white black run measuring code) and fixed them. With these changes,  
all the length measurements are spot on, not just close enough to decode.

The change doesn't do much for the test set; it picks up four (which I  
assume are 11.gif in it's various rotations). With this change, even single  
pixel-per-module codes can be decoded, so I added a down-sampled version of  
16.gif to the test set.</description>
      <comments>
		<comment id="1" date="2010-08-12 05:15:30" author="dswit...@gmail.com"></comment>
		<comment id="2" date="2010-08-13 03:57:07" author="sro...@gmail.com">I can commit this, but it doesn't affect the number of images that pass  
when I run the tests. #11 does not decode. Any ideas?</comment>
		<comment id="3" date="2010-08-13 04:05:24" author="smpar...@smparkes.net">To see more successes, you'd need 508. Without 508, it'll never find three  
finders in 11.</comment>
		<comment id="4" date="2010-08-13 04:16:42" author="smpar...@smparkes.net">I should put an "I think" around that. I don't know that I tested that  
exact case, but I am pretty sure ...</comment>
		<comment id="5" date="2010-08-13 05:23:14" author="sro...@gmail.com">OK yes I see that now.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="6c9812e9bbc5f66122da2a069e7666bd6134cc9e" author="srowen" date="2010-08-13 05:18:08"/>
          <file name="core/src/com/google/zxing/qrcode/detector/Detector.java">
              <method name="sizeOfBlackWhiteBlackRunBothWays" returnType="float" parameters="int int int int"/>
          </file>
          <file name="core/test/src/com/google/zxing/qrcode/QRCodeBlackBox2TestCase.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="508" opendate="2010-08-10 12:08:54" fixdate="2010-08-12 13:08:55">
    <buginformation>
      <summary>Handle boundary conditions in HybridBinarizer a little better</summary>
      <description>c.f. http://groups.google.com/group/zxing/browse_thread/thread/d410251c3daa73c8 There's actually a comment for this in HB.java, that the last 7 pixels are dropped. This is kind of a boundary case, but given that my (mythical?) users don't really know how to frame codes, I thought I'd look at it. It's actually an easy (and elegant?) fix: when there's a fractional block on the right or bottom, simply compute it using the final 8 pixels. This overlaps with the previous block, but that should be fine. I wouldn't expect any computational impact with this, unless I'm missing something ...</description>
      <comments>
		<comment id="1" date="2010-08-12 12:25:45" author="dswit...@google.com">Issue 509 has been merged into this issue.</comment>
		<comment id="2" date="2010-08-13 05:31:45" author="sro...@gmail.com">Sounds good, committed with 511</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="0a6cac9820fee46ab1e95e9713636378d4015b7e" author="srowen" date="2010-08-13 05:24:38"/>
          <file name="core/src/com/google/zxing/common/HybridBinarizer.java">
              <method name="binarizeEntireImage" returnType="void" parameters=""/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="492" opendate="2010-08-04 10:08:27" fixdate="2010-08-14 12:08:56">
    <buginformation>
      <summary>AbstractBlackBoxTestCase does not rotate non-square images correctly</summary>
      <description>The java test driver doesn't rotate images correctly if the image isn't  
square.

Not a huge deal. Mostly the reason for looking into it was the desire to  
crosscheck the Java with the C++ which doesn't have this issue.

Patch attached. It create nine new QR successes. It also creates four new  
false/partial positives. The new cases are ones where there's already a  
failure coming from the same image at a different angle (so it's not  
surprising that now that the images are not getting cropped, they are also  
getting incorrectly decoded?)</description>
      <comments>
		<comment id="1" date="2010-08-06 01:59:21" author="sro...@gmail.com">
The rotation is right but the resulting image boundary is wrong, is that  
the issue? OK will have a look when I'm back.</comment>
		<comment id="2" date="2010-08-06 02:07:55" author="smpar...@smparkes.net">
Yeah, sorry. Poor choice of words. It's just that the new image has to be  
of a different size and that also means that there has to be translation to  
move the old center to the new center. The patch will actually handle  
non-90 degree rotations and produce an image of the necessary size and  
placement. That generality is currently not used, but the general case is  
easier to code than the special cases.</comment>
		<comment id="3" date="2010-08-15 04:12:17" author="sro...@gmail.com">Looks great, will commit.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="aee6be71f37d3318f9574338dcb4dcfe83d7768e" author="srowen" date="2010-08-15 04:11:49"/>
          <file name="core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java">
          </file>
          <file name="core/test/src/com/google/zxing/negative/FalsePositivesBlackBoxTestCase.java">
              <method name="FalsePositivesBlackBoxTestCase" returnType="null" parameters=""/>
          </file>
          <file name="core/test/src/com/google/zxing/negative/PartialBlackBoxTestCase.java">
              <method name="PartialBlackBoxTestCase" returnType="null" parameters=""/>
          </file>
          <file name="core/test/src/com/google/zxing/negative/UnsupportedBlackBoxTestCase.java">
              <method name="UnsupportedBlackBoxTestCase" returnType="null" parameters=""/>
          </file>
          <file name="core/test/src/com/google/zxing/qrcode/QRCodeBlackBox2TestCase.java">
              <method name="QRCodeBlackBox2TestCase" returnType="null" parameters=""/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="507" opendate="2010-08-10 12:08:17" fixdate="2010-08-15 07:08:20">
    <buginformation>
      <summary>Company field in generator seems not to work</summary>
      <description>1.go to http://zxing.appspot.com/generator/ 
2.try to generate vcard (contact information) 
3.the company field seems not to work 
 
a qr code with company information ;) no info seems to be taken, in the url   
http://chart.apis.google.com/chart?... is the company info also not shown 
 
chrome 5.0.375.125 on MacOS10.6.4 
 
Some of the tested readers on iphone os 4 has problems with german umlauts   
(eg Ã¤, Ã¶ and so on) but I think that's another problem and not important to   
you... </description>
      <comments>
		<comment id="1" date="2010-08-11 14:16:53" author="sro...@gmail.com">There is no vCard support and MECARD does not encode company info. Yeah the  
field really shouldn't be there. I'll delete it but no real plans to update  
this.</comment>
		<comment id="2" date="2010-08-11 16:23:38" author="ralf.enders">Thanks for the quick response ;) vcard was wrong but many readers seems to  
support ORG in a mecard, but...</comment>
		<comment id="3" date="2010-08-11 22:55:30" author="sro...@gmail.com">It's not valid, no.</comment>
		<comment id="4" date="2010-08-15 22:56:48" author="rico.vaccaro">I was able to add mecard ORG: support.

The attached files show the changes. Please keep in mind that I made these  
changes on version zxing 1.4
</comment>
		<comment id="5" date="2010-08-15 23:12:01" author="sro...@gmail.com">Right, it's not that it would be hard to add that. It's that it's not valid.</comment>
		<comment id="6" date="2011-11-14 05:38:37" author="srowen">At last I figured out how to update the GAE/GWT-based encoder. I added  
ability to use vCard encoding, and let the MECARD encoding specify a  
non-standard ORG field. So, this should have an effect now, at least as far  
as the encoder goes.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="6f3d6a0effac11d589e8695717d48f97d5be79d5" author="srowen" date="2010-08-11 10:44:38"/>
          <file name="zxing.appspot.com/generator/src/com/google/zxing/web/generator/client/ContactInfoGenerator.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="519" opendate="2010-08-16 10:08:45" fixdate="2010-08-16 13:08:10">
    <buginformation>
      <summary>wrong alignment position for version 23</summary>
      <description>http://code.google.com/p/zxing/source/browse/trunk/core/src/com/google/zxing/qrcode/decoder/Version.java#422

  new Version(23, new int[]{6, 30, 54, 74, 102},

I don't have a spec to look at but this line is the only one that
doesn't follow a regular pattern with constant delta between
successive alignment positions.  I think the 74 is a typo and
should be

  new Version(23, new int[]{6, 30, 54, 78, 102},</description>
      <comments>
		<comment id="1" date="2010-08-17 05:20:13" author="sro...@gmail.com">Good eye. Indeed that is the correct value from Table E.1. I'll commit a  
fix now.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="a251967f552d6dcd395c9fad5ad3d1fffcc059d5" author="smparkes@smparkes.net" date="2010-08-18 01:19:57"/>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="524" opendate="2010-08-19 16:08:25" fixdate="2010-08-30 20:08:47">
    <buginformation>
      <summary>qrcode::Detector#findAlignmentInRegion needs a Y boundary condition</summary>
      <description>findAlignmentInRegion checks for bad looking X values but it doesn't seem  
to be checking for bad looking Y values. I just had a core dump in C++  
because the bottom and top values get inverted (due to the image bounds)  
leading to a negative (or very large, in C++ unsigneds) height.

I think it should have a simlar check but wanted to do a sanity check.</description>
      <comments>
		<comment id="1" date="2010-08-23 12:19:12" author="sro...@gmail.com">Probably so, do you have a patch in mind?</comment>
		<comment id="2" date="2010-08-26 12:43:55" author="smpar...@smparkes.net">Very simple. I'll apply if there no objections.</comment>
		<comment id="3" date="2010-08-31 12:47:53" author="smpar...@smparkes.net"></comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="d98d2af1ab67f32484992500f644ed10341cc8ed" author="smparkes@smparkes.net" date="2010-08-31 12:18:56"/>
          <file name="core/src/com/google/zxing/qrcode/detector/Detector.java">
              <method name="findAlignmentInRegion" returnType="AlignmentPattern" parameters="float int int float"/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="537" opendate="2010-09-01 00:09:16" fixdate="2010-09-01 03:09:44">
    <buginformation>
      <summary>Barcode is not scanned correclty</summary>
      <description>1. Scan the attached barcode

Type ean13 is correctly identified correctly. But the barcode number is  
incorrect.
Correct number would be: 030000769023
Actual result: 30000769023

Android, 3.4 (Market Version)
</description>
      <comments>
		<comment id="1" date="2010-09-01 17:03:53" author="sro...@gmail.com">The barcode itself is actually *both* a UPC-A code and EAN-13. EAN-13 is  
actually a clever superset of UPC-A, designed that way to enable backward  
compatibility. The scanner simply picks UPC-A here. The only way to  
differentiate is that there are actually 13 digits printed below. It is  
EAN-13, so calling it UPC-A is technically off, but I don't think we're  
going to go to the trouble of disambiguating just for this.</comment>
		<comment id="2" date="2010-09-01 17:15:03" author="Simon.Moser">I did try to force EAN-13 by passing it as SCAN_FORMATS but still  
30000769023 is the result.</comment>
		<comment id="3" date="2010-09-01 18:38:17" author="sro...@gmail.com">Ah I think you have a point here. Internally, when scanning for UPC-A and  
EAN-13, only one decoder (for EAN-13) is deployed since EAN-13 is a  
superset. If it finds a barcode starting with 0 it construes it as UPC-A.  
That's a nice trick, but, is not correct when UPC-A is not allowed as a  
barcode format. In this case it should just return the 13-digit value.

I can fix that I'm pretty sure. It will still come back as UPC-A if  
scanning for both, but, will come back as EAN-13 if UPC-A is not allowed.</comment>
		<comment id="4" date="2010-09-01 19:27:15" author="sro...@gmail.com"></comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="14a03f40b1bb16b0925079ed34bef4467a2f2286" author="srowen" date="2010-09-01 07:26:37"/>
          <file name="core/src/com/google/zxing/oned/MultiFormatUPCEANReader.java">
              <method name="decodeRow" returnType="Result" parameters="int BitArray Hashtable"/>
          </file>
          <file name="core/test/src/com/google/zxing/oned/EAN13BlackBox1TestCase.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="548" opendate="2010-09-09 16:09:50" fixdate="2010-09-11 08:09:05">
    <buginformation>
      <summary>RIM app Crashing!. JVM Exception: ConnectionClosed exception.</summary>
      <description>1.run ZxingUiApplication inside zxlib 1.5 package.
2.goto snap.
3.take a picture of a QR-code (image obtained from "simulate camera image"  
in the simulator)


the expected output is the app decoding correctly and showing the url. what  
happens is the JVM Exception 104: ConnectionClosed Exception. can't go  
anywhere from here..


zxing 1.5. on Blackberry 9800 simulator. Windows XP (on top of Oracle  
Vbox... for what is worth, all the other apps i have simulated with this  
system did not presented any problems).


maybe is this a problem with the sd-card not being present?. or is it the  
library decoding the picture having a bug??

thanks for any help.</description>
      <comments>
		<comment id="1" date="2010-09-10 08:56:14" author="sro...@gmail.com">Sounds like a problem simply opening the web page: "connection closed".  
That's not related to the app. It's not supported anyway.</comment>
		<comment id="2" date="2010-09-10 09:04:00" author="a.fradiani">i'll check with other code images in that case. (i'm also trying now to run  
the app on the 8530 simulator.)

what exactly is not supported?.</comment>
		<comment id="3" date="2010-09-10 17:22:37" author="sro...@gmail.com">Nobody hass worked on the BlackBerry client, and don't think there's a plan  
to, so I don't know what it's status is regarding newer phones / OS /  
emulator.</comment>
		<comment id="4" date="2010-09-10 18:50:21" author="morgan.jacquet">The error is in com.google.zxing.client.rim =&gt; ZxingLMMainScreen.java :

In the run() method :
file.delete() is called after file.close() in the "finally" block.
Thus an ConnectionClosed exception appears.
So, call delete() before close().

Hope it helps :)

This bug is fixed in another issue.</comment>
		<comment id="5" date="2010-09-10 18:53:58" author="morgan.jacquet">Update : Have a look @ issue 126 :)</comment>
		<comment id="6" date="2010-09-10 21:45:14" author="sro...@gmail.com">I see, this works differently than the Java File/FileInputStream, where  
you'd have to close() the stream then delete() the file. I switched these  
around and you can try again now.</comment>
		<comment id="7" date="2010-09-12 02:16:14" author="a.fradiani">Fixed!. changed the 'file.delete()' call as you said.
Thanks for the help!.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="1a835728649cb6728657022e333e8770ab6ecfda" author="srowen" date="2010-09-10 09:40:18"/>
          <file name="rim/src/com/google/zxing/client/rim/ZXingLMMainScreen.java">
              <method name="run" returnType="void" parameters=""/>
          </file>
      </commit>
    </fixedCommits>
  </bug>
  <bug id="376" opendate="2010-04-06 19:04:21" fixdate="2010-09-26 23:09:40">
    <buginformation>
      <summary>Zoom on Android 2.1 not working</summary>
      <description>1. Install latest Market version
2. Start app
3. Not zoomed in

Supposed to start at zoom 2.

Version 48 for android

I've run tests with the camera, and it appears it does not let you set an
initial zoom, it always starts at 0. In my tests, starting a side thread
with a sleep of 100 millis that sets the zoom seems to correct the issue.
Could also be solved by simply providing zoom controls on the main view.</description>
      <comments>
		<comment id="1" date="2010-04-07 16:42:22" author="sro...@gmail.com">Gonna need to know what device you are using, and for you to use the ZXing  
Test app in the market to send
us a dump of its camera parameters.

This app is written to use Android 1.x, which has no direct APIs for zoom  
control. Instead it tries to set device
specific camera parameters to set zoom. Right now it sets 2 or 3 such  
params. I can try to guess and set
another one if your device has yet another way to do this.

When the world is 99% on Android 2.x we can move as well. I'm sure that the  
real API for this, which i assume
you're using, does in fact work on the device.</comment>
		<comment id="2" date="2010-04-07 16:53:35" author="viperwolf">Don't think 2.1 has any new canera api. When I said Oom control I ment a  
screen widget so I could
change zoom manualy. The params.set("zoom", 2) works, but only after camera  
has finished its first
auto focus, so in my little test app, delaying it with a second thread  
helped.

I'm using Motorola Droid, got the 2.1 update few days ago. Never tried on  
2.0, first time using app. Will
try your test app in a few hours when I'm actually awake.</comment>
		<comment id="3" date="2010-04-07 17:05:50" author="sro...@gmail.com">Hmm you could be right. There are new explicit params for focus, effects,  
flash, white balance in 2.x but I
don't see zoom. I had assumed there was. In any event, yes the "zoom" param  
is already being set.

I checked in a change to look for and respect 'mot-zoom-values', though I  
am not sure it's actually anything
to do with it. This param shows up in reports from the Moto Blur.

I went back and combed a device report from the Droid and  
see 'mot-zoom-step' of 0.5. I'm guessing the
device won't accept zoom values that aren't a multiple of 0.5. Right now  
the default is 2.7x (which is
conveniently the max zoom on the Hero, my personal device).

I'll make a change in the next 15 minutes or so to respect that value. Once  
that second change is in maybe
you are in a position to download/build from SVN and try it?</comment>
		<comment id="4" date="2010-04-07 22:35:09" author="viperwolf">Checked out from SVN and ran it, but didn't solve the zoom issue. There is  
still the
issue that (at least on the droid) that it's preventing you from  
pre-setting the
zoom. No matter what zoom level you set during the initialize phase is  
being reset to
default (maybe even other values as well, but zoom is whats noticeable to  
me).

I did a little experiment and found two possible solutions for this bug (be  
it a
Droid bug or an Android 2.1 bug).

-----
-----

1) Wrap the call to setZoom in a Thread with a slight delay:
     new Thread() {
             public void run() {
                     try {
                             Thread.sleep(100);
                     } catch (Exception e) {
                     }

                 Camera.Parameters parameters = camera.getParameters();
                 setZoom(parameters);
                 camera.setParameters(parameters);
             }
     }.start();

2) Call it after the auto focus:
   private final Camera.AutoFocusCallback autoFocusCallback = new
Camera.AutoFocusCallback() {
     public void onAutoFocus(boolean success, Camera camera) {
       if (autoFocusHandler != null) {
         Message message = autoFocusHandler.obtainMessage(autoFocusMessage,  
success);
         // Simulate continuous autofocus by sending a focus request every  
1.5 seconds.
         autoFocusHandler.sendMessageDelayed(message, 1500L);
         autoFocusHandler = null;
         if (zoomInit) {
           zoomInit = false;
           Camera.Parameters parameters = camera.getParameters();
           setZoom(parameters);
           camera.setParameters(parameters);
         }
       }
     }
   };

-----
-----

Either of those get the Droid to zoom after the first auto focus is  
completed. Might
even be wise to move the entire camera configure into that as well, just to  
make sure
the Droid (or Android 2.1) isn't loosing all the parameters being set.</comment>
		<comment id="5" date="2010-04-08 03:10:34" author="sro...@gmail.com">Nice one. I just committed something like this. Actually I completely  
overhauled how CameraManager is
organized since it was getting unruly. I'd appreciate people like yourself  
trying the build, not only to see if this
works but to make sure scanning's OK.

(So I can credit you, can you mail me your name? I'm srowen. Or happy to  
credit viperwolf)</comment>
		<comment id="6" date="2010-04-22 05:05:13" author="viperwolf">Sorry for delay, been really busy last few weeks. The fix sort of works,  
but not 100%
of the time. Seems like 1 out of 10 times it will zoom on first use, but  
then wont
zoom again after viewing a product in the browser and returning. Any chance  
of adding
the zoom controls (android.widget.ZoomControls) to the screen? Still try  
and default
to 2, but then for problem phones like mine, we could manually zoom in as  
needed.</comment>
		<comment id="7" date="2010-04-22 16:48:18" author="sro...@gmail.com">I'm reluctant to since it complicates the interface and not all phones have   
this function. I don't know if it would 
solve things. The app is already repeatedly requesting zoom, and that   
wouldn't be changed by this</comment>
		<comment id="8" date="2010-09-27 15:16:13" author="audumbarphadte">Zoom is working fine, but only for Droid and Nexus One, with HTC sence it  
dosen't work.</comment>
      </comments>
    </buginformation>
    <fixedCommits>
      <commit Id="ad1e585a23a00994e31f0b7820c2e66b4beb86ca" author="srowen" date="2010-04-08 03:03:14"/>
          <file name="android/src/com/google/zxing/client/android/CaptureActivity.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/CaptureActivityHandler.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/DecodeThread.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/PlanarYUVLuminanceSource.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/PreferencesActivity.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/ViewfinderView.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/AutoFocusCallback.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/CameraConfigurationManager.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/CameraManager.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/FlashlightManager.java">
          </file>
          <file name="android/src/com/google/zxing/client/android/camera/PreviewCallback.java">
          </file>
      </commit>
    </fixedCommits>
  </bug>
</bugrepository>
